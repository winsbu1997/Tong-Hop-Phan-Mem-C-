<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDoiMatKhau.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARsAAAA6CAYAAACAqv0GAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAPYSURBVHhe7d0/aFNRFMfxjB0zZszYsWPGjBkUAiJ0zGbd
        HDMGRYouRZCKi3UrCFIRJChKsYoRkQShtAb/pBZttLZpWqMBHY45J2qb5Ci1edfBfi98IDncl0z5cd59
        7+XGOkMA4B9wiwAQNbcIAFFziwAQNbcIAFFziwAQNbf4W6lUSgqFghQXHsn8k7LU6uvCYDD+/6G/df3N
        K82ATCbjZsQfuMUe8XhcpqYvS73RlNLqphSW2pJ52JL0widJFrcldn0LwH9Of+v6m1eaAcVXG9L++k1m
        Zq9JMpl0s6OPW/ylcHZSausNOVXekcQtggXArpEbTck9/SzL9U1rSEZGRtwc+cEtWjdTfPBYCs+aEr/Z
        dL8IAJSGjjYkpcWqJBIJN1M6BovaEs1XliRzv+F+MAB4xu7uSKW2JmNjYwO50tFb0I5Gg0YP8j4MAP5E
        l1sqb9576zg9b+zUiY4GwDBG73ROqZZeWvOyJ192g2Zy6oLky/7BAPA3xh81ZfZmcTBsdFGn9rFpCz3e
        gQDwtyrvGnvXb7pho5etdDXZOwAADiJbasnc7Xu7YaPXxutbO1ziBhC5+nbr5+XwmN12rHcDehMBYBiX
        lpsyMTHRDZupi9Ny6tkXdyIADGPPqVTMHqrUZ528iQAwDL0Mvrzyths2leorbuIDEISuBW+1OmdOGjb6
        gsVhAKHosLCxF84EAIiCZQxhAyA0yxjCBkBoljGEDYDQLGMIGwChWcYQNgBCs4whbACEZhlD2AAIzTKG
        sAEQmmUMYQMgNMsYwgZAaJYxhA2A0CxjCBsAoVnGEDYAQrOMIWwAhGYZo2HT/vqNLVwABPMrbPQv+/Sv
        +7xJADAMbWS0obGwmX9SlvTCJ3ciAAwjWdyWWn29GzaXrlyViTK7KwCInm6moJsqWNjkcjmZed5wJwLA
        MAqLLSmcPtMNm3g8Lluf2+5EABjGnv2+u3t96yZSupmUNxkADkK3iNKton7kTDdsNHk0gbwDAOAg5l5s
        SDab7Q0bRXcDICp9XU1v2CQSCSlVV+xSlXcwAOyHbnpZer0mo6OjftgoPZ0qrXzgjmIABzZXXZfsseM9
        2dLR88Zkjhy1wEncosMBsH/a0WjQ5E6cHMiVjoGCsQXj2hp3FgPYF12j0VMnp6P5yS0aXcPRRxnmVzbs
        g7wvAHC46RrvbHXTFoP71mj6ucUe6XTaPmj5Q1Mml1rW7bCmAxxemgH5xbaUVjftuafx8XE3O/q4RZem
        Vj6ft25Hn+JkMBiHc2gGTJ47L6lUys2K33CLABA1twgAUXOLABA1twgAUXOLABChmHwH00UzpgMM9eoA
        AAAASUVORK5CYII=
</value>
  </data>
</root>